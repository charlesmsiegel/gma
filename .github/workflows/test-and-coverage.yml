name: Test and Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    if: false  # Temporarily disabled
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: gma_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7.2
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('environment.yml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage pytest pytest-django pytest-asyncio
        pip install django redis channels djangorestframework django-polymorphic
        pip install psycopg2-binary
    
    - name: Set up test environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/gma_test" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379/0" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-for-github-actions-only" >> $GITHUB_ENV
        echo "DEBUG=False" >> $GITHUB_ENV
        echo "DJANGO_SETTINGS_MODULE=gm_app.settings" >> $GITHUB_ENV
    
    - name: Run Django system checks
      run: |
        python manage.py check --deploy
    
    - name: Run migrations
      run: |
        python manage.py migrate --verbosity=0
    
    - name: Run health check
      run: |
        python manage.py health_check
    
    - name: Run tests with coverage
      run: |
        coverage run --source='.' manage.py test --verbosity=2
        coverage xml
        coverage report --show-missing --skip-covered
    
    - name: Check coverage threshold
      run: |
        coverage report --fail-under=80
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      if: always()
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Upload coverage HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: htmlcov/
    
    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      run: |
        coverage report --format=markdown > coverage_comment.md
        echo "## ðŸ“Š Coverage Report" >> pr_comment.md
        echo "" >> pr_comment.md
        cat coverage_comment.md >> pr_comment.md
        echo "" >> pr_comment.md
        echo "Minimum coverage required: 80%" >> pr_comment.md
      continue-on-error: true

  integration-test:
    if: false  # Temporarily disabled
    runs-on: ubuntu-latest
    needs: test
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: gma_integration_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7.2
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install django redis channels djangorestframework django-polymorphic
        pip install psycopg2-binary
    
    - name: Set up test environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/gma_integration_test" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379/0" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-for-integration-tests" >> $GITHUB_ENV
        echo "DEBUG=False" >> $GITHUB_ENV
        echo "DJANGO_SETTINGS_MODULE=gm_app.settings" >> $GITHUB_ENV
    
    - name: Run migrations
      run: |
        python manage.py migrate --verbosity=0
    
    - name: Run integration tests
      run: |
        python manage.py test tests.test_project_setup --verbosity=2