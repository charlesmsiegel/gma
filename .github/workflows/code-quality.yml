name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8 mypy djlint
        pip install django redis channels djangorestframework django-polymorphic
        pip install types-redis
    
    - name: Run isort (import sorting)
      run: isort --profile black --check-only --diff .
    
    - name: Run Black (code formatting)
      run: black --check --diff .
    
    - name: Run flake8 (linting)
      run: flake8 .
    
    - name: Run mypy (type checking)
      run: mypy .
    
    - name: Run djlint (Django template linting)
      run: djlint --check templates/
      continue-on-error: true  # Don't fail build if templates have issues
    
    - name: Auto-format and fix issues (on push to main/develop)
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
      run: |
        # Format Python code
        isort --profile black .
        black .
        
        # Format Django templates
        djlint --reformat templates/ || true
        
        # Check if there are any changes to commit
        if [ -n "$(git status --porcelain)" ]; then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "$(cat <<'EOF'
          Auto-format code and templates
          
          ðŸ¤– Generated with [Claude Code](https://claude.ai/code)
          
          Co-Authored-By: Claude <noreply@anthropic.com>
          EOF
          )"
          git push
        fi

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install bandit (security linter)
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml]
    
    - name: Run bandit security scan
      run: bandit -r . -f json -o bandit-report.json || true
    
    - name: Upload bandit report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-security-report
        path: bandit-report.json